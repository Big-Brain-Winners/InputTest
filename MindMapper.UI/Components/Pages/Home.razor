@page "/"
@using System.Diagnostics

<PageTitle>Home</PageTitle>

<div class="d-flex align-items-center justify-content-center flex-column">
    <h1 class="display-2">MindMapper</h1>
    <p>Welcome to MindMapper.</p>


    <p>You can use this application to configure MindMapper and test the virtual gamepad.</p>
</div>


<div class="card mb-3">
    <div class="card-header">
        <h2>Connection Details</h2>
    </div>
    
    <div class="card-body">
        
        <div class="mb-3">
            <label for="boardId">Board ID</label>
            <input type="text" id="boardId" class="form-control" value="Ganglion"/>
        </div>

        <div class="mb-3">
            <label for="serialPort">Serial Port</label>
            <input type="text" id="serialPort" class="form-control" value="COM10"/>
        </div>

        <div class="mb-3">
            <label for="boardId">Mac Address</label>
            <input type="text" id="macAddress" class="form-control" value="bc:80:a4:9c:3c"/>
        </div>

    </div>
</div>


<div class="card">
    <div class="card-header">
        <h2>Binding Settings</h2>
    </div>

    <div class="card-body">

        <div class="mb-3">
            <label for="controlType">Control Type</label>
            <input type="text" id="controlType" class="form-control" value="Button"/>
        </div>

        <div class="mb-3">
            <label for="controlIndex">Control Index</label>
            <input type="text" id="controlIndex" class="form-control" value="1"/>
        </div>

        <div class="mb-3">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked" checked>
                <label class="form-check-label" for="flexCheckChecked">
                    Inverted
                </label>
            </div>
        </div>

    </div>
</div>


<style>
    pre {
        max-height: 200px;
        overflow-y: auto;
        background-color: #f0f0f0;
        border: 2px solid #ccc;
        padding: 10px;
        
    }
</style>



@code {

    public string Output { get; set; } = "";
    
    public string AppRoot { get; set; } = "";
    
    public string ConfigExists { get; set; } = "No";


    protected override void OnInitialized()
    {
        var appRoot = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + "/MindMapper";

        var configPath = appRoot + "/config.json";
        
        if (File.Exists(configPath))
        {
            ConfigExists = "Yes";
        }
        
        AppRoot = appRoot;
    }

    void DoProcess()
    {
        var processParams = new ProcessStartInfo()
        {
            FileName = "ls",
            Arguments = "-la",
            RedirectStandardOutput = true,
            UseShellExecute = false,
            CreateNoWindow = true
        };
        
        using (var process = Process.Start(processParams))
        {
            Output = process.StandardOutput.ReadToEnd();
        }
        
    }

}